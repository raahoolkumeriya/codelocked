PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2018-11-24 16:46:28.826319');
INSERT INTO django_migrations VALUES(2,'auth','0001_initial','2018-11-24 16:46:29.279467');
INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2018-11-24 16:46:29.602884');
INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2018-11-24 16:46:29.936665');
INSERT INTO django_migrations VALUES(5,'admin','0003_logentry_add_action_flag_choices','2018-11-24 16:46:30.228764');
INSERT INTO django_migrations VALUES(6,'contenttypes','0002_remove_content_type_name','2018-11-24 16:46:30.539999');
INSERT INTO django_migrations VALUES(7,'auth','0002_alter_permission_name_max_length','2018-11-24 16:46:30.839125');
INSERT INTO django_migrations VALUES(8,'auth','0003_alter_user_email_max_length','2018-11-24 16:46:31.129327');
INSERT INTO django_migrations VALUES(9,'auth','0004_alter_user_username_opts','2018-11-24 16:46:31.407168');
INSERT INTO django_migrations VALUES(10,'auth','0005_alter_user_last_login_null','2018-11-24 16:46:31.688382');
INSERT INTO django_migrations VALUES(11,'auth','0006_require_contenttypes_0002','2018-11-24 16:46:31.795636');
INSERT INTO django_migrations VALUES(12,'auth','0007_alter_validators_add_error_messages','2018-11-24 16:46:32.105649');
INSERT INTO django_migrations VALUES(13,'auth','0008_alter_user_username_max_length','2018-11-24 16:46:32.417165');
INSERT INTO django_migrations VALUES(14,'auth','0009_alter_user_last_name_max_length','2018-11-24 16:46:32.698484');
INSERT INTO django_migrations VALUES(15,'sessions','0001_initial','2018-11-24 16:46:32.937799');
INSERT INTO django_migrations VALUES(16,'mywebsite','0001_initial','2018-11-24 16:53:46.937683');
INSERT INTO django_migrations VALUES(17,'mywebsite','0002_streamtype_category','2018-11-24 17:01:38.988940');
INSERT INTO django_migrations VALUES(18,'mywebsite','0003_auto_20181124_2231','2018-11-24 17:01:54.867446');
INSERT INTO django_migrations VALUES(19,'mywebsite','0004_auto_20181124_2235','2018-11-24 17:05:19.920988');
INSERT INTO django_migrations VALUES(20,'mywebsite','0005_auto_20181124_2237','2018-11-24 17:07:04.192048');
INSERT INTO django_migrations VALUES(21,'mywebsite','0006_auto_20181125_1043','2018-11-25 05:13:44.780018');
INSERT INTO django_migrations VALUES(22,'mywebsite','0007_auto_20181125_1058','2018-11-25 05:28:41.463273');
INSERT INTO django_migrations VALUES(23,'mywebsite','0008_streamtype_github','2018-11-25 18:06:11.728141');
INSERT INTO django_migrations VALUES(24,'mywebsite','0009_auto_20181125_2336','2018-11-25 18:06:35.017072');
INSERT INTO django_migrations VALUES(25,'taggit','0001_initial','2018-11-27 17:51:26.080680');
INSERT INTO django_migrations VALUES(26,'taggit','0002_auto_20150616_2121','2018-11-27 17:51:26.333003');
INSERT INTO django_migrations VALUES(27,'mywebsite','0010_streamtype_tags','2018-11-27 17:51:26.684167');
INSERT INTO django_migrations VALUES(28,'mywebsite','0011_remove_streamtype_tags','2018-11-27 18:02:14.288529');
INSERT INTO django_migrations VALUES(29,'mywebsite','0012_streamtype_tags','2018-11-27 18:38:26.202567');
INSERT INTO django_migrations VALUES(30,'mywebsite','0013_comment','2018-11-28 10:48:30.054229');
INSERT INTO django_migrations VALUES(31,'mywebsite','0014_auto_20181128_1631','2018-11-28 11:01:44.610919');
INSERT INTO django_migrations VALUES(32,'mywebsite','0015_auto_20181128_1632','2018-11-28 11:03:02.449208');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_flag" smallint unsigned NOT NULL);
INSERT INTO django_admin_log VALUES(1,'2018-11-24 18:16:15.116378','1','Cancer Cell Data Analysis','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(2,'2018-11-24 19:40:35.597537','2','GEL Image Annotation and Processing','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(3,'2018-11-24 19:51:44.473587','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(4,'2018-11-24 19:53:11.791075','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(5,'2018-11-24 19:54:00.376578','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(6,'2018-11-24 19:54:24.653076','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(7,'2018-11-25 04:03:55.261788','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["category"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(8,'2018-11-25 04:04:07.026599','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["category"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(9,'2018-11-25 04:04:55.273475','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(10,'2018-11-25 04:05:35.050009','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(11,'2018-11-25 05:29:41.707120','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["summary"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(12,'2018-11-25 05:50:07.684432','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["summary"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(13,'2018-11-25 05:50:28.082017','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["summary"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(14,'2018-11-25 15:22:25.883735','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(15,'2018-11-25 15:48:35.083969','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["category", "description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(16,'2018-11-25 15:48:47.466916','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["category"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(17,'2018-11-25 16:10:19.766821','3','automation stuff','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(18,'2018-11-25 16:11:56.224151','4','logistic regression using ML','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(19,'2018-11-25 16:16:41.870083','5','other stuff','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(20,'2018-11-27 17:52:02.491092','4','logistic regression using ML','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(21,'2018-11-27 17:52:17.705078','5','other stuff','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(22,'2018-11-27 17:52:32.734789','3','automation stuff','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(23,'2018-11-27 17:52:45.872732','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(24,'2018-11-27 17:53:05.296753','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(25,'2018-11-27 18:39:36.009528','5','other stuff','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(26,'2018-11-27 18:39:44.860659','4','logistic regression using ML','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(27,'2018-11-27 18:39:54.787952','3','automation stuff','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(28,'2018-11-27 18:40:03.541441','2','GEL Image Annotation and Processing','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(29,'2018-11-27 18:40:13.942291','1','Cancer Cell Data Analysis','[{"changed": {"fields": ["tags"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(30,'2018-11-28 10:55:43.550177','1','<django.db.models.query_utils.DeferredAttribute object at 0x000000AE3910CE48>','[{"added": {}}]',10,1,1);
INSERT INTO django_admin_log VALUES(31,'2018-11-28 10:56:43.305262','1','<django.db.models.query_utils.DeferredAttribute object at 0x000000AE3910CE48>','[]',10,1,2);
INSERT INTO django_admin_log VALUES(32,'2018-11-28 11:03:19.330845','1','logistic regression using ML','[]',10,1,2);
INSERT INTO django_admin_log VALUES(33,'2018-11-28 11:03:41.617281','2','logistic regression using ML','[{"added": {}}]',10,1,1);
INSERT INTO django_admin_log VALUES(34,'2018-11-28 16:50:02.595339','6','netcool active alert','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(35,'2018-11-28 16:50:17.973185','6','netcool active alert','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(36,'2018-11-28 17:07:22.996981','6','netcool active alert','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(37,'2018-11-28 17:14:46.468433','7','notepad5tar','[{"added": {}}]',7,1,1);
INSERT INTO django_admin_log VALUES(38,'2018-11-28 17:15:24.975812','7','notepad5tar','[{"changed": {"fields": ["github"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(39,'2018-11-28 17:17:16.988153','7','notepad5tar','[{"changed": {"fields": ["summary", "description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(40,'2018-11-28 17:20:47.425852','7','notepad5tar','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(41,'2018-11-28 17:21:45.460347','7','notepad5tar','[]',7,1,2);
INSERT INTO django_admin_log VALUES(42,'2018-11-28 17:23:44.126206','7','notepad5tar','[{"changed": {"fields": ["summary"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(43,'2018-11-28 17:26:02.102579','7','notepad5tar','[{"changed": {"fields": ["summary"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(44,'2018-11-28 17:26:26.353673','7','notepad5tar','[{"changed": {"fields": ["summary"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(45,'2018-11-28 17:26:55.114214','7','notepad5tar','[{"changed": {"fields": ["summary"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(46,'2018-11-28 17:28:16.776142','7','notepad5tar','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(47,'2018-11-28 17:58:24.504723','7','notepad5tar','[{"changed": {"fields": ["description"]}}]',7,1,2);
INSERT INTO django_admin_log VALUES(48,'2018-11-28 17:59:22.446820','7','notepad5tar','[{"changed": {"fields": ["description"]}}]',7,1,2);
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','group');
INSERT INTO django_content_type VALUES(3,'auth','user');
INSERT INTO django_content_type VALUES(4,'auth','permission');
INSERT INTO django_content_type VALUES(5,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(6,'sessions','session');
INSERT INTO django_content_type VALUES(7,'mywebsite','streamtype');
INSERT INTO django_content_type VALUES(8,'taggit','tag');
INSERT INTO django_content_type VALUES(9,'taggit','taggeditem');
INSERT INTO django_content_type VALUES(10,'mywebsite','comment');
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,1,'view_logentry','Can view log entry');
INSERT INTO auth_permission VALUES(5,2,'add_group','Can add group');
INSERT INTO auth_permission VALUES(6,2,'change_group','Can change group');
INSERT INTO auth_permission VALUES(7,2,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(8,2,'view_group','Can view group');
INSERT INTO auth_permission VALUES(9,3,'add_user','Can add user');
INSERT INTO auth_permission VALUES(10,3,'change_user','Can change user');
INSERT INTO auth_permission VALUES(11,3,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(12,3,'view_user','Can view user');
INSERT INTO auth_permission VALUES(13,4,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(14,4,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(15,4,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(16,4,'view_permission','Can view permission');
INSERT INTO auth_permission VALUES(17,5,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(18,5,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(19,5,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(20,5,'view_contenttype','Can view content type');
INSERT INTO auth_permission VALUES(21,6,'add_session','Can add session');
INSERT INTO auth_permission VALUES(22,6,'change_session','Can change session');
INSERT INTO auth_permission VALUES(23,6,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(24,6,'view_session','Can view session');
INSERT INTO auth_permission VALUES(25,7,'add_streamtype','Can add Stream Entry');
INSERT INTO auth_permission VALUES(26,7,'change_streamtype','Can change Stream Entry');
INSERT INTO auth_permission VALUES(27,7,'delete_streamtype','Can delete Stream Entry');
INSERT INTO auth_permission VALUES(28,7,'view_streamtype','Can view Stream Entry');
INSERT INTO auth_permission VALUES(29,8,'add_tag','Can add Tag');
INSERT INTO auth_permission VALUES(30,8,'change_tag','Can change Tag');
INSERT INTO auth_permission VALUES(31,8,'delete_tag','Can delete Tag');
INSERT INTO auth_permission VALUES(32,8,'view_tag','Can view Tag');
INSERT INTO auth_permission VALUES(33,9,'add_taggeditem','Can add Tagged Item');
INSERT INTO auth_permission VALUES(34,9,'change_taggeditem','Can change Tagged Item');
INSERT INTO auth_permission VALUES(35,9,'delete_taggeditem','Can delete Tagged Item');
INSERT INTO auth_permission VALUES(36,9,'view_taggeditem','Can view Tagged Item');
INSERT INTO auth_permission VALUES(37,10,'add_comment','Can add comment');
INSERT INTO auth_permission VALUES(38,10,'change_comment','Can change comment');
INSERT INTO auth_permission VALUES(39,10,'delete_comment','Can delete comment');
INSERT INTO auth_permission VALUES(40,10,'view_comment','Can view comment');
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL);
INSERT INTO auth_user VALUES(1,'pbkdf2_sha256$120000$memDYDuGGQqN$BsZl92OOMriGekN+ipSJMUmWweh1PyUGXx22qZEckeY=','2018-11-28 10:52:17.770763',1,'rahul','','rahulkumeriya@gmail.com',1,1,'2018-11-24 16:54:22.899421','');
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO django_session VALUES('46jv0528vs0vmhl7qw2suboko0smqjwo','NzIyMzgzZWVlNDhiYThkYjMyODFjZjhmYWQ1OTk5Njg0ZTBkY2NkNTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNGQyMzc0Y2I0YmEzNTJjNzMxNDExMTVlNjY1MzU4ZDBiOWI1NWZhZSIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-12-08 16:55:03.305726');
INSERT INTO django_session VALUES('wb8fz9kkbfw6h56f0px7flvtojrfv3py','M2EyY2M1MDNmYTE0NmMyNjEwZDliMDc4OTJkMDNmNDEzOGRmNzU3NTp7Il9hdXRoX3VzZXJfaGFzaCI6IjRkMjM3NGNiNGJhMzUyYzczMTQxMTE1ZTY2NTM1OGQwYjliNTVmYWUiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-12-08 19:12:09.152888');
INSERT INTO django_session VALUES('s062m71jzvaup2omcbto8izj29mftmqt','ODdmNjFjYTBmN2I0ZDQxZGNlOGE5MDZlMDlhYTc2ZTE2ODhlNDAzMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI0ZDIzNzRjYjRiYTM1MmM3MzE0MTExNWU2NjUzNThkMGI5YjU1ZmFlIn0=','2018-12-12 10:52:17.882862');
CREATE TABLE IF NOT EXISTS "taggit_tag" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE, "slug" varchar(100) NOT NULL UNIQUE);
INSERT INTO taggit_tag VALUES(1,'python','python');
INSERT INTO taggit_tag VALUES(2,'html','html');
INSERT INTO taggit_tag VALUES(3,'css','css');
INSERT INTO taggit_tag VALUES(4,'shell','shell');
INSERT INTO taggit_tag VALUES(5,'ansible','ansible');
INSERT INTO taggit_tag VALUES(6,'pyqt','pyqt');
CREATE TABLE IF NOT EXISTS "taggit_taggeditem" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" integer NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "tag_id" integer NOT NULL REFERENCES "taggit_tag" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO taggit_taggeditem VALUES(1,4,7,1);
INSERT INTO taggit_taggeditem VALUES(2,5,7,2);
INSERT INTO taggit_taggeditem VALUES(3,5,7,3);
INSERT INTO taggit_taggeditem VALUES(4,5,7,4);
INSERT INTO taggit_taggeditem VALUES(5,3,7,1);
INSERT INTO taggit_taggeditem VALUES(6,3,7,5);
INSERT INTO taggit_taggeditem VALUES(7,1,7,1);
INSERT INTO taggit_taggeditem VALUES(8,1,7,4);
INSERT INTO taggit_taggeditem VALUES(9,2,7,1);
INSERT INTO taggit_taggeditem VALUES(10,2,7,6);
CREATE TABLE IF NOT EXISTS "mywebsite_streamtype" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(200) NOT NULL, "slug" varchar(50) NOT NULL UNIQUE, "description" text NULL, "publish" bool NOT NULL, "created" datetime NOT NULL, "modified" datetime NOT NULL, "category" varchar(30) NOT NULL, "summary" text NULL, "github" varchar(200) NOT NULL, "tags" varchar(30) NOT NULL);
INSERT INTO mywebsite_streamtype VALUES(1,'Cancer Cell Data Analysis','cancer-cell-data-analysis',replace(replace('<p>THis is freelancer project&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Creted on:</strong>&nbsp;Aug. 10, 2018, 11:03 a.m.</p>\r\n\r\n<h2>Application Restart</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Application restart using Ansible playbook and triggering it from Dashboard</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="Slide Image" src="http://techdeep.herokuapp.com/media/media/application3.jpg" style="height:416px; width:900px" /></p>\r\n\r\n<p><a href="http://techdeep.herokuapp.com/#carousel-1">Previous</a><a href="http://techdeep.herokuapp.com/#carousel-1">Next</a></p>\r\n\r\n<ol>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><em>Complete code you can find&nbsp;</em>Here</h4>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;<strong>Posted on:</strong>&nbsp;Sept. 8, 2018, 11:04 a.m.</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; Comments:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p><a href="http://techdeep.herokuapp.com/comment/">Add comment</a><br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp; No comments here yet :(</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>&nbsp; &nbsp;&nbsp;<strong>Creted on:</strong>&nbsp;Oct. 4, 2017, 10:49 a.m.</p>\r\n\r\n<h2>Autosys Job status [ Application SOD ]</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The shell script will gives the autosys job status decorate for any application before the start of day and provide the output to Stakeholders.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="Slide Image" src="http://techdeep.herokuapp.com/media/media/application_sod_reportl.jpg" /></p>\r\n\r\n<p><a href="http://techdeep.herokuapp.com/#carousel-1">Previous</a><a href="http://techdeep.herokuapp.com/#carousel-1">Next</a></p>\r\n\r\n<ol>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><em>Complete code you can find&nbsp;</em>Here</h4>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;<strong>Posted on:</strong>&nbsp;Sept. 8, 2018, 10:50 a.m.</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; Comments:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p><a href="http://techdeep.herokuapp.com/comment/">Add comment</a><br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp; No comments here yet :(</p>','\r',char(13)),'\n',char(10)),1,'2018-11-24 18:16:15.115377','2018-11-27 18:40:13.938287','scripting','<p>&nbsp; &nbsp; &nbsp; &nbsp; Application restart using Ansible playbook and triggering it from Dashboard&nbsp;Application restart using Ansible playbook and triggering it from Dashboard&nbsp;Application restart using Ansible playbook and triggering it from Dashboard&nbsp;Application restart using Ansible playbook and triggering it from Dashboard&nbsp;Application restart using Ansible playbook and triggering it from Dashboard&nbsp;Application restart using Ansible playbook and triggering it from Dashboard</p>','','shell,html,css');
INSERT INTO mywebsite_streamtype VALUES(2,'GEL Image Annotation and Processing','gel-image-annotation-and-processing',replace(replace('<p>This is also FP</p>\r\n\r\n<pre>\r\n<code class="language-python">for i in list:\r\n    print(i)</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/_qOl_7qfPOM" width="740"></iframe></p>','\r',char(13)),'\n',char(10)),1,'2018-11-24 19:40:35.596536','2018-11-27 18:40:03.539441','scripting','<p>class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;class=&quot;mt-0&quot;</p>','','python,pyqt');
INSERT INTO mywebsite_streamtype VALUES(3,'automation stuff','automation-stuff',replace(replace('<pre>\r\n<code class="language-html">{% load staticfiles %}\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang="en-US"&gt;\r\n    &lt;head&gt;\r\n        &lt;meta charset="utf-8"&gt;\r\n        &lt;title&gt;codelocked&lt;/title&gt;\r\n\r\n		{# Load the tag library #}\r\n		{% load bootstrap4 %}\r\n\r\n		{# Load CSS and JavaScript #}\r\n		{% bootstrap_css %}\r\n		{% bootstrap_javascript jquery=''full'' %}\r\n\r\n		{# Display django.contrib.messages as Bootstrap alerts #}\r\n		{% bootstrap_messages %}\r\n		\r\n	&lt;style type="text/css"&gt;\r\n		body, h1{\r\n			margin:0;\r\n			padding: 0;\r\n			font-family: DejaVu Sans Mono;\r\n			background-color: #D0C7C7;\r\n		}\r\n		\r\n		.text-container h1{	\r\n			font-size: 150px;\r\n			color: rgba(255,255,255,.1);\r\n			background-image: url({% static ''images/code.jpg'' %});\r\n			background-repeat: repeat-x;\r\n			-webkit-background-clip:text;\r\n			animation: animate 15s linear infinite;\r\n		}\r\n		\r\n			@keyframes animate {\r\n				0%{\r\n					background-position: left 0px top 10px;\r\n				}\r\n				40%{\r\n					background-position: left 800px top 10px;\r\n				}\r\n			}\r\n		.text-container{\r\n			margin-top: 5%;\r\n			text-align:center;\r\n		}\r\n		\r\n		\r\n		// Hover \r\n		\r\n		@import url(https://fonts.googleapis.com/css?family=Work+Sans:200,300,400,500);\r\n\r\n		* {font-family: "Work Sans", sans-serif !important;} \r\n\r\n		.container{margin-top:10vh;}\r\n\r\n		.col-lg-6{padding:0 5px;}\r\n\r\n		 .box-c, {\r\n		  position: relative;\r\n		  display: block;\r\n		  width: 100%;\r\n		  text-align: center;\r\n		  cursor: pointer;\r\n		}\r\n\r\n		.box-a {height: 500px;}\r\n		.box-b, .box-c, .box-d, .box-e {height:125px;}\r\n\r\n		.box-c {background: #D0C7C7;}\r\n\r\n		.box-a a {line-height:500px;}\r\n		.box-b a, .box-c a, .box-d a, .box-e a {line-height:125px;}\r\n\r\n		@media (max-width: 991px) {\r\n		  .col-md-12{padding:5px 0px;}\r\n		  .box-a {height:125px !important;} \r\n		  .box-a a {line-height:125px;}\r\n		}\r\n\r\n		/*------------------------------------*/\r\n		/*------ Basic Underline Styles ------*/\r\n		/*------------------------------------*/\r\n\r\n		.normal-underline,\r\n		.custom-underline {\r\n		  position: relative;\r\n		  display: inline-block;\r\n		  font-size: 24px;\r\n		  font-weight: 400;\r\n		  text-align: center;\r\n		}\r\n\r\n		.normal-underline,\r\n		.normal-underline:hover {\r\n		  color: #444;\r\n		  text-decoration: underline;\r\n		}\r\n\r\n		.custom-underline,\r\n		.custom-underline:hover,\r\n		.custom-underline:focus,\r\n		.custom-underline:active {\r\n		  color: #fff;\r\n		  text-decoration: none;\r\n		}\r\n\r\n		.custom-underline::after {\r\n		  content: "";\r\n		  position: absolute;\r\n		}\r\n\r\n\r\n		/*--- Green Box (box-c) ---*/\r\n		.box-c .custom-underline::after {\r\n		  top: 65%;\r\n		  height: 2px !important;\r\n		  width: 40%;\r\n		  left: 30%;\r\n		  background-color: rgba(255, 255, 255, 0.6);\r\n			transition: 0.4s ease-out all .1s;\r\n		}\r\n\r\n		.box-c:hover .custom-underline::after {\r\n		  width: 90%;\r\n		  left: 5%;\r\n			transition: 0.5s ease all;\r\n		}\r\n\r\n		\r\n\r\n	&lt;/style&gt;\r\n	&lt;/head&gt;\r\n	&lt;body&gt;\r\n\r\n	 &lt;div class="box-c" style="text-align:center;"&gt;\r\n			&lt;a href="/home/home" class="custom-underline"&gt;Codeyard&lt;/a&gt;  \r\n      &lt;/div&gt;\r\n		\r\n	&lt;div class="text-container"&gt;\r\n		&lt;h1&gt;&lt;strong&gt;CODE&lt;/strong&gt;LOCKED&lt;/h1&gt;\r\n	&lt;/div&gt;\r\n	\r\n    &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>','\r',char(13)),'\n',char(10)),1,'2018-11-25 16:10:19.765839','2018-11-27 18:39:54.784949','automation',replace(replace('<p>This is autoamtion testing stuff</p>\r\n\r\n<p>This is autoamtion testing stuff</p>','\r',char(13)),'\n',char(10)),'','ansible,python');
INSERT INTO mywebsite_streamtype VALUES(4,'logistic regression using ML','logistic-regression-using-ml','<p><iframe allowfullscreen="" frameborder="0" height="460" src="//www.youtube.com/embed/zAULhNrnuL4" width="840"></iframe></p>',1,'2018-11-25 16:11:56.223151','2018-11-27 18:39:44.858658','machine_learning','<p>Logistic regression&nbsp;</p>','','python,pyqt');
INSERT INTO mywebsite_streamtype VALUES(5,'other stuff','other-stuff',replace(replace('<pre>\r\n<code class="language-python">from django.shortcuts import render\r\nfrom django.http import HttpResponseRedirect, HttpResponse\r\nfrom django.views import View\r\nfrom .models import StreamType\r\nfrom django.views.generic import TemplateView\r\n\r\ndef LandingView(request, slugcatergory):\r\n	if slugcatergory == "home" :\r\n		query_set=StreamType.objects.all()\r\n		context = { ''type'': query_set }\r\n		return render(request, ''home.html'',context)\r\n	if slugcatergory in [''scripting'',''automation'',''machine_learning'',''other'']:\r\n		query_set=StreamType.objects.filter(category=slugcatergory)\r\n		context = { ''type'': query_set }\r\n		print(slugcatergory, query_set)\r\n		return render(request, ''home.html'',context)\r\n	else:\r\n		query_set=StreamType.objects.get(slug=slugcatergory)\r\n		context = { ''type'': query_set }\r\n		return render(request, ''detail.html'',context)\r\n		\r\n	\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>','\r',char(13)),'\n',char(10)),1,'2018-11-25 16:16:41.868082','2018-11-27 18:39:36.007527','other','<p>this is new stuff</p>','','shell,html,css');
INSERT INTO mywebsite_streamtype VALUES(6,'netcool active alert','netcool-active-alert',replace(replace('<p>The Netcool Active Script is written is shell script and powered by autosys job agent&nbsp;as&nbsp;sheduler.</p>\r\012\r\012<pre>\r\012<code class="language-bash">#calling autosys Agent from below location \r\012\r\012 # if autosys agent details path update in bash_profile file\r\012. $HOME/.profile		\r\012\r\012# AUTOSYS script are at below location \r\012export SCRIPT_PATH=$PWD    \r\012\r\012#Cleanup function to clean the temparary files created during the ran of script\r\012cleanup(){\r\012	rm -rf output output.txt single instance job input1\r\012}\r\012trap cleanup EXIT\r\012\r\012\r\012echo \r\012echo -e "\t\t\t\t $(tput setab 2) $(tput bold) NETCOOL ACTIVE ALERTS $(tput sgr0) "\r\012echo \r\012\r\012netcool(){\r\012	\r\012#function to get autosys job status irrespective to all available instances\r\012\r\012fetching_job_status()\r\012{\r\012	grep -e MAXRUNS -e FAILURE input.txt &gt; input1\r\012\r\012	awk -F '' '' ''{print $9}'' input1 | tail -n +2&gt;instance\r\012	awk -F '' '' ''{print $13}'' input1 | tail -n +2&gt;job\r\012\r\012chmod 777 input1 instance job \r\012\r\012# To fetech 1 1 element form instance and job respectiveily \r\012while true:\r\012do\r\012	read -r f1 &lt;&amp;3 || break\r\012	read -r f2 &gt;&amp;4 || break\r\012	export AUTOSYS_SERVER=$f1\r\012	$SCRIPT_PATH/autosys_job_status.sh -j $f2 | grep -v Job | grep -v ______ | sed ''/^$/d''\r\012done 3&lt;instance 4&lt;job\r\012\r\012}\r\012\r\012\r\012fetching_job_status &gt; output.txt\r\012\r\012chmod 777 output.txt\r\012\r\012#formating the output of job with there current job STATUS\r\012\r\012grep -v ''^ '' output.txt &gt; output\r\012\r\012chmod 777 output\r\012\r\012count=`cat output | wc -l`\r\012\r\012for i in `seq 1 $count`\r\012do\r\012	b = `sed -ne "$i p" output | cut -c 108,109`\r\012	sed -ne "$i p" output &gt; single \r\012	chmod 777 single\r\012	\r\012	case $b in \r\012		''FA'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $27}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` FAILURE "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;\r\012\r\012		''TE'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $27}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` TERMINATED "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;\r\012\r\012	\r\012		 	\r\012		''SU'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $27}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` SUCCESS "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;	\r\012	\r\012		''OH'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $27}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` ON_HOLD "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;\r\012\r\012		''AC'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $27}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` ACTIVATE "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;\r\012	\r\012		''IN'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $27}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` INACTIVE "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;\r\012\r\012		''RU'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $54}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` RUNNING "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;\r\012\r\012\r\012\r\012		''OF'')	\r\012			job_name =`awk -F '' '' ''{print $1}'' single`\r\012			inc = `grep $job_name input.txt | awk -F '' '' ''{print $27}''`\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` OFF_HOLD "\r\012			if [[ $inc = "INC"* ]]\r\012			then\r\012				echo -e "\t\t\t $inc"\r\012			else\r\012				echo " "\r\012			fi\r\012			;;\r\012\r\012\r\012		''OI'')	\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` ON_ICE "\r\012\r\012\r\012		''ST'')	\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` STARTING "\r\012			;;\r\012		\r\012		''RE'')	\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` RUNNING "\r\012			;;\r\012\r\012		\r\012		''QU'')	\r\012			instance_name =`grep $job_name input.txt | awk -F '' '' ''{print $9}''`\r\012			echo -ne "$instance_name"\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` QUE_WAIT "\r\012			;;\r\012\r\012		*)	\r\012			echo -ne "`awk -F '' '' ''{print $1}'' single` $b "\r\012\r\012	esac\r\012done\r\012\r\012}\r\012\r\012\r\012netcool | awk -F '' '' ''{if(length($7) != 0) print $0 }'' | awk -v red="$(tput setaf 1)" -v yellow="$(tput setaf 3)" -v magenta="$(tput setaf 5)" -v green="$(tput setaf 2)" -v blue="$(tput setaf 4)" -v cyan="$(tput setaf 6)" -v reset="$(tput sgr0)"\r\012''BEGIN {\r\012print "-------------------------------------------------------------------------------------------"\r\012printf ("%-10s %-60s %-15s %-15s\n", "INSTANCE","	JOB NAME","STATUS","INCIDENT")\r\012print "-------------------------------------------------------------------------------------------"\r\012}\r\012{\r\012if ($3 ~ /FAILURE/) color=red;\r\012else if ($3 ~ /SUCCESS/) color=green;\r\012else if ($3 ~ /ON_HOLD/) color=blue;\r\012else if ($3 ~ /RUNNING/) color=yellow;\r\012else if ($3 ~ /TERMINATED/) color=magenta;\r\012else if ($3 ~ /INACTIVE/) color=cyan;\r\012else if ($3 ~ /RESTART/) color=cyan;\r\012else color=" "\r\012printf("%-10s %-60s %s%-15s%s %_15s\n",$1,$2,color,$3,reset,$4)\r\012}''\r\012\r\012echo -----------------------------------------------------------------------------------------\r\012\r\012echo;echo\r\012\r\012trap cleanup EXIT</code></pre>\r\012\r\012<p>&nbsp;</p>\r\012\r\012<p>&nbsp;</p>\r\012\r\012<p>&nbsp;</p>','\r',char(13)),'\012',char(10)),1,'2018-11-28 16:50:02.594363','2018-11-28 17:07:22.995028','scripting',replace(replace('<p>Netcool is a IBM&nbsp;TIVOLI alert monitoring tool. If is configure with autosys jobs the script will help to get job status in single execution.</p>\r\n\r\n<p>The script will take input alert and autosys agent running in backend on unix server as prerequisites.&nbsp;</p>','\r',char(13)),'\n',char(10)),'https://github.com/raahoolkumeriya/Netcool_active_Alerts','shell , autosys');
INSERT INTO mywebsite_streamtype VALUES(7,'notepad5tar','notepad5tar','<p><img alt="" src="https://2.bp.blogspot.com/-5upGZiG6uMc/W_7WQTqokGI/AAAAAAAASMM/1VNXOABL9HMPtTbF5UDsf4LvuYwxYi1CACLcBGAs/s1600/notepad.jpg" style="height:113px; width:216px" /></p>',1,'2018-11-28 17:14:46.466479','2018-11-28 17:59:22.443884','scripting',replace(replace('<p style="margin-left:0cm; margin-right:0cm">Notepad5tar is free software working on windows platform, it is free to use on Non windows platform as Well, execute the python file with pre install require libraries.</p>\r\n\r\n<p style="margin-left:0cm; margin-right:0cm">Hope You enjoy notepad5tar as much as I enjoy coding it<span dir="RTL">.</span></p>','\r',char(13)),'\n',char(10)),'https://github.com/raahoolkumeriya/notepad5tar','python, pyqt');
CREATE TABLE IF NOT EXISTS "mywebsite_comment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content" text NOT NULL, "timestamp" datetime NOT NULL, "post_id" integer NOT NULL REFERENCES "mywebsite_streamtype" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO mywebsite_comment VALUES(1,'This is my first comment','2018-11-28 10:55:43.549176',4,1);
INSERT INTO mywebsite_comment VALUES(2,'this is second','2018-11-28 11:03:41.616300',4,1);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',32);
INSERT INTO sqlite_sequence VALUES('django_admin_log',48);
INSERT INTO sqlite_sequence VALUES('django_content_type',10);
INSERT INTO sqlite_sequence VALUES('auth_permission',40);
INSERT INTO sqlite_sequence VALUES('auth_user',1);
INSERT INTO sqlite_sequence VALUES('taggit_tag',6);
INSERT INTO sqlite_sequence VALUES('taggit_taggeditem',10);
INSERT INTO sqlite_sequence VALUES('mywebsite_streamtype',7);
INSERT INTO sqlite_sequence VALUES('mywebsite_comment',2);
CREATE UNIQUE INDEX auth_group_permissions_group_id_permission_id_0cd325b0_uniq ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX auth_user_groups_user_id_group_id_94350c0c_uniq ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX auth_user_user_permissions_user_id_permission_id_14a6b632_uniq ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX django_content_type_app_label_model_76bd3d3b_uniq ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX auth_permission_content_type_id_codename_01ab375a_uniq ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE INDEX "mywebsite_comment_post_id_efecfc15" ON "mywebsite_comment" ("post_id");
CREATE INDEX "mywebsite_comment_user_id_77cf3c19" ON "mywebsite_comment" ("user_id");
COMMIT;
